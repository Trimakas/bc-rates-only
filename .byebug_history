c
bc_rate_response
c
final_amazon_rates[1][:total_price].to_f
final_amazon_rates[0][:total_price].to_f
final_amazon_rates[0][:total_price]
final_amazon_rates[0]
final_amazon_rates
c
parsed_amazon_rates
c
parsed_amazon_rates
c
parsed_amazon_rates
speed_from_db
speed_hash
c
parsed_amazon_rates
@shop
my_params
c
speed_from_db
fixed_amount.to_f
speed
c
speed
c
fixed_amount.to_f
fixed_amount
speed
c
current_store.speeds.where(shipping_speed: shipping_speed, marketplace: marketplace)
fixed_rate_amount
safe_params
c
rate[:amount]
rate.has_value?(speed)
rate
speed
c
speed
rate
rate.has_value?(speed)
parsed_amazon_rates
speed
c
speed
rate
c
parsed_amazon_rates
c
speed_hash
c
speed_from_db[:fixed_amount].to_f
speed_from_db[:fixed_amount]
c
speed_from_db
speed_hash
c
store.amazons.find_by(country_code: destination_country_code)
current_store_country_codes.include?(destination_country_code)
destination_country_code
c
EU_COUNTRY_CODES.include?(destination_country_code)
destination_country_code
c
destination_country_code
pick_closest_country_code_to_order
return pick_closest_country_code_to_order
current_store_country_codes.include?(destination_country_code)
destination_country_code
current_store_country_codes
c
params
c
my_params
params
c
params
c
params
my_params
c
items
address
c
parsed_amazon_rates
c
parsed_amazon_rates
c
parsed_amazon_rates
c
parsed_amazon_rates
c
bc_rate_response
prep_bc_rate_response(final_amazon_rates)
final_amazon_rates
c
parsed_amazon_rates
c
amazon_rates
c
parsed_amazon_rates
c
amazon_rates["FulfillmentPreviews"]["member"]
amazon_rates
c
parsed_amazon_rates
c
COUNTRY_CODES.key(marketplace)
marketplace
c
my_params["destination"]["country_iso2"]
my_params["destination"]
my_params
c
JSON.parse(safe_params)
safe_params
c
joe["speed"]
joe
joe[:speed]
joe.speed
joe = JSON.parse(safe_params)
JSON.parse(safe_params)
safe_params
c
params
c
safe_params
params
c
params["marketplace_info"].class
params["marketplace_info"].calss
params["marketplace_info"]
params
c
params
c
params
c
params
c
params
c
params
c
params["bytestand_rate_info"]["speed"]
params["bytestand_rate_info"]
params
c
params
c
params
c
params
c
params
c
current_store.amazons.pluck(:marketplace)
current_store.amazons.marketplace
current_store.amazons
current_store
c
current_store.amazons.marketplaces
current_store.amazons.marketplace
current_store.amazons
current_store
c
params["marketplace"].upcase
c
current_store.amazons.find_by(seller_id: seller_id, marketplace: marketplace)
current_store.amazons
c
params
c
marketplace
c
params
c
params
c
params
c
zones_to_de_select.length
zones_to_de_select
current_store.zones.where(seller_id: seller_id_from_params, marketplace: marketplace_from_params).pluck(:bc_zone_id)
current_store.zones.where(seller_id: seller_id_from_params, marketplace: marketplace_from_params)
zones
params
paams
current_store
c
zones
c
selected_zone_id
zones
c
just_zones
params["zones"]
c
zones
c
zones
c
zones
c
params["zones"]
c
zones
c
params["zones"]
c
zones
c
params["zones"].each{|x| pp x["value"]}
params["zones"].each{|x| x["value"]}
params["zones"].each{|x| x.is_a?(Hash)}
params["zones"].each{|x| x.is_a?(Hash) puts x["value"]}
params["zones"].each{|x| if x.is_a?(Hash) puts x["value"]}
params["zones"].each{|x| if x.is_a?(Hash) pp x["value"]}
params["zones"][2]
params["zones"][1]
params["zones"][0]
params["zones"].class
params["zones"].parse
params["zones"]
params
params["zones"].each {|x| pp x["value"]}
params["zones"]{|x| pp x["value"]}
params["zones"].class
params["zones"]
zones
c
zones
c
auth_token
seller_id
marketplace
c
marketplace
c
amazon_credentials
c
continue
amazon_credentials
c
amazon_credentials
c
params
current_store
current_zone
c
params
c
params
